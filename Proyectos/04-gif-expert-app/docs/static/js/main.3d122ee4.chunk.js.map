{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","peticion","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","alt","src","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAhBS,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,uDACJ,mCADI,cAEqDC,UAAUH,GAF/D,sBAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAZO,kBAaZA,GAbY,4CAAH,sDCCPS,EAAc,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,yBAAKgB,UAAU,QACX,yBAAKC,IAAKP,EAAOQ,IAAKlB,IACtB,2BAAIU,KCDHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAGtB,ECLwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAbAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAGZ,CAACtB,IAEGuB,EDb2BM,CAAa7B,GAAjCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAEtB,OACI,oCACI,4BAAKtB,GACJsB,GAAW,uBAAGJ,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aAEPL,EAAOJ,KAAI,SAAAC,GACP,OAAO,kBAAC,EAAD,eACHoB,IAAKpB,EAAIC,IACLD,UEfnBqB,EAAe,WAExB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAKA,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAKQS,EAAWe,KAAI,SAAAT,GACZ,OAAQ,kBAAC,EAAD,CACH8B,IAAK9B,EACLA,SAAUA,U,MCpBtCgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3d122ee4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const inputHandler = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [ inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={inputHandler}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const apikey = 'OSJaNghA7F1A9om1v45bRqRAAOAnniNP';\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apikey}&q=${encodeURI(category)}&limit=10`;\r\n    const peticion = await fetch(url);\r\n    const { data } = await peticion.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    console.log(gifs)\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img alt={title} src={url} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => {\r\n                        return <GifGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifts'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 3000);\r\n               \r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories,'HunterXHunter']);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            {/* <button onClick={handleAdd} >Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    // categories.map(category => {\r\n                    //     return <li key={category}>{category}</li>\r\n                    // })\r\n                    categories.map(category => {\r\n                       return  <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    })\r\n\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}